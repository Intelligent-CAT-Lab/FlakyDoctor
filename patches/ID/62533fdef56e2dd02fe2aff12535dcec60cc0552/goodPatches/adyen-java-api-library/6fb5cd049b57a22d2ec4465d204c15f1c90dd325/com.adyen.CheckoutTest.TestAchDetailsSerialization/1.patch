test_before_fix:
    public void TestAchDetailsSerialization() throws JsonProcessingException {
        String expectedJson = "{\"amount\":{\"value\":1000,\"currency\":\"USD\"},\"merchantAccount\":\"MagentoMerchantTest\",\"paymentMethod\":{\"bankAccountNumber\":\"1234567\",\"bankLocationId\":\"1234567\",\"encryptedBankAccountNumber\":\"1234asdfg\",\"ownerName\":\"John Smith\",\"type\":\"ach\"},\"reference\":\"Your order number\",\"returnUrl\":\"https://your-company.com/...\",\"applicationInfo\":{\"adyenLibrary\":{\"name\":\"adyen-java-api-library\",\"version\":\"" + LIB_VERSION + "\"}}}";

        AchDetails achDetails = new AchDetails();
        achDetails.setBankAccountNumber("1234567");
        achDetails.setBankLocationId("1234567");
        achDetails.setEncryptedBankAccountNumber("1234asdfg");
        achDetails.setOwnerName("John Smith");
        PaymentsRequest paymentsRequest = createPaymentsCheckoutRequest();
        paymentsRequest.setPaymentMethod(achDetails);

        String gson = GSON.toJson(paymentsRequest);
        assertEquals(expectedJson, gson);

        String jackson = OBJECT_MAPPER.writeValueAsString(paymentsRequest);
        assertEquals(expectedJson, jackson);
    }

test_after_fix:

code:
public void TestAchDetailsSerialization() throws JsonProcessingException { 
     String expectedJson = "{\"amount\":{\"value\":1000,\"currency\":\"USD\"},\"merchantAccount\":\"MagentoMerchantTest\",\"paymentMethod\":{\"bankAccountNumber\":\"1234567\",\"bankLocationId\":\"1234567\",\"encryptedBankAccountNumber\":\"1234asdfg\",\"ownerName\":\"John Smith\",\"type\":\"ach\"},\"reference\":\"Your order number\",\"returnUrl\":\"https://your-company.com/...\",\"applicationInfo\":{\"adyenLibrary\":{\"name\":\"adyen-java-api-library\",\"version\":\"" + LIB_VERSION + "\"}}}"; 
  
     AchDetails achDetails = new AchDetails(); 
     achDetails.setBankAccountNumber("1234567"); 
     achDetails.setBankLocationId("1234567"); 
     achDetails.setEncryptedBankAccountNumber("1234asdfg"); 
     achDetails.setOwnerName("John Smith"); 
     PaymentsRequest paymentsRequest = createPaymentsCheckoutRequest(); 
     paymentsRequest.setPaymentMethod(achDetails); 
  
     String gson = GSON.toJson(paymentsRequest); 
     JsonParser parser = new JsonParser(); 
     JsonElement o1 = parser.parse(expectedJson); 
     JsonElement o2 = parser.parse(gson); 
     assertEquals(o1, o2); 
  
     String jackson = OBJECT_MAPPER.writeValueAsString(paymentsRequest); 
     JsonElement o3 = parser.parse(jackson); 
     assertEquals(o1, o3); 
 } 
 
import:
['import com.google.gson.JsonElement;\n ', 'import com.google.gson.JsonParser;\n ']
pom:

<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version>
</dependency>
