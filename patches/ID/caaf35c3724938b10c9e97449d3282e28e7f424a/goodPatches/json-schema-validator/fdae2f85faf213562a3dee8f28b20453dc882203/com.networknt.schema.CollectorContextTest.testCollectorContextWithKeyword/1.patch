test_before_fix:
    public void testCollectorContextWithKeyword() throws Exception {
        ValidationResult validationResult = validate("{\"test-property1\":\"sample1\",\"test-property2\":\"sample2\"}");
        Assertions.assertEquals(0, validationResult.getValidationMessages().size());
        List<String> contextValues = (List<String>) validationResult.getCollectorContext().get(SAMPLE_COLLECTOR);
        Assertions.assertEquals(0, validationResult.getValidationMessages().size());
        Assertions.assertEquals(2, contextValues.size());
        Assertions.assertEquals(contextValues.get(0), "actual_value_added_to_context1");
        Assertions.assertEquals(contextValues.get(1), "actual_value_added_to_context2");
    }

test_after_fix:

code:
public void testCollectorContextWithKeyword() throws Exception { 
     ValidationResult validationResult = validate("{\"test-property1\":\"sample1\",\"test-property2\":\"sample2\"}"); 
     Assertions.assertEquals(0, validationResult.getValidationMessages().size()); 
     List<String> contextValues = (List<String>) validationResult.getCollectorContext().get(SAMPLE_COLLECTOR); 
     Assertions.assertEquals(0, validationResult.getValidationMessages().size()); 
     Assertions.assertEquals(2, contextValues.size()); 
  
     List<String> sortedContextValues = new ArrayList<>(contextValues); 
     Collections.sort(sortedContextValues); 
  
     Assertions.assertEquals(sortedContextValues.get(0), "actual_value_added_to_context1"); 
     Assertions.assertEquals(sortedContextValues.get(1), "actual_value_added_to_context2"); 
 } 
 
import:
['import java.util.ArrayList;\n ', 'import java.util.Collections;\n ']
pom:
