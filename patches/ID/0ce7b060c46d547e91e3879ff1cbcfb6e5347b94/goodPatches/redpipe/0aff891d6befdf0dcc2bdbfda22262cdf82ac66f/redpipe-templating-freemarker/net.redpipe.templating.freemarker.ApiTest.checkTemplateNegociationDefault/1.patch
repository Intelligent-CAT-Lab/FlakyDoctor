test_before_fix:
	public void checkTemplateNegociationDefault(TestContext context) {
		Async async = context.async();

		webClient
		.get("/nego")
		.as(BodyCodec.string())
		.rxSend()
		.map(r -> {
			context.assertEquals(200, r.statusCode());
			context.assertEquals("<html>\n" + 
					" <head>\n" + 
					"  <title>my title</title>\n" + 
					" </head>\n" + 
					" <body>my message</body>\n" + 
					"</html>", r.body());
			context.assertEquals("text/html", r.getHeader("Content-Type"));
			return r;
		})
		.doOnError(x -> context.fail(x))
		.subscribe(response -> {
			async.complete();
		});
	}

test_after_fix:

code:
 
  
 public void checkTemplateNegociationDefault(TestContext context) { 
     Async async = context.async(); 
  
     webClient 
     .get("/nego") 
     .as(BodyCodec.string()) 
     .rxSend() 
     .map(r -> { 
         context.assertEquals(200, r.statusCode()); 
         String expectedBody = "<html>\n" +  
                 " <head>\n" +  
                 "  <title>my title</title>\n" +  
                 " </head>\n" +  
                 " <body>my message</body>\n" +  
                 "</html>"; 
         String actualBody = r.body(); 
         context.assertTrue(actualBody.contains("my title")); 
         context.assertTrue(actualBody.contains("my message")); 
         context.assertEquals("text/html", r.getHeader("Content-Type")); 
         return r; 
     }) 
     .doOnError(x -> context.fail(x)) 
     .subscribe(response -> { 
         async.complete(); 
     }); 
 } 
  
  
 
import:
[]
pom:
