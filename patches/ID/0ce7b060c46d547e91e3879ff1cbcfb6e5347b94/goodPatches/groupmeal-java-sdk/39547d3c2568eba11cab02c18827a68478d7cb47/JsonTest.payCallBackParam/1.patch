test_before_fix:
    public void payCallBackParam() {
        PayCallbackParam param = new PayCallbackParam();
        param.setStatus(1);
        param.setMessage("fail");
        param.setNotifyTime(System.currentTimeMillis() / 1000 + "");
        param.setPaymentId("20210343");
        param.setTotalAmount("2590");
        param.setTradeNo("2340343433");

        String json = JsonUtil.encode2UnderScore(param);
        System.out.println(json);

        PayCallbackParam param1 = JsonUtil.decode2Camel(json, PayCallbackParam.class);
        String json1 = JsonUtil.encode2UnderScore(param1);
        System.out.println(json1);
        Assert.assertTrue(json.equals(json1));
    }

test_after_fix:

code:
public void payCallBackParam() { 
     PayCallbackParam param = new PayCallbackParam(); 
     param.setStatus(1); 
     param.setMessage("fail"); 
     param.setNotifyTime(System.currentTimeMillis() / 1000 + ""); 
     param.setPaymentId("20210343"); 
     param.setTotalAmount("2590"); 
     param.setTradeNo("2340343433"); 
  
     String json = JsonUtil.encode2UnderScore(param); 
     System.out.println(json); 
  
     PayCallbackParam param1 = JsonUtil.decode2Camel(json, PayCallbackParam.class); 
     String json1 = JsonUtil.encode2UnderScore(param1); 
     System.out.println(json1); 
  
     JsonParser parser = new JsonParser(); 
     JsonElement o1 = parser.parse(json); 
     JsonElement o2 = parser.parse(json1); 
     Assert.assertEquals(o1, o2); 
 } 
 
import:
['import com.google.gson.JsonElement;\n ', 'import com.google.gson.JsonParser;\n ']
pom:

<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version>
</dependency>
