test_before_fix:
    public void assertGetPoolContent() {
        String testText = "{\"tenantId\":\"prescription\",\"itemId\":\"dynamic-threadpool-example\",\"tpId\":" +
                "\"message-consume\",\"queueType\":1,\"capacity\":4,\"keepAliveTime\":513,\"rejectedType\":4,\"isAlarm\"" +
                ":1,\"capacityAlarm\":80,\"livenessAlarm\":80,\"allowCoreThreadTimeOut\":1}";
        ThreadPoolParameterInfo threadPoolParameterInfo = ThreadPoolParameterInfo.builder().tenantId("prescription")
                .itemId("dynamic-threadpool-example").tpId("message-consume").content("描述信息").corePoolSize(1)
                .maximumPoolSize(2).queueType(1).capacity(4).keepAliveTime(513).executeTimeOut(null).rejectedType(4)
                .isAlarm(1).capacityAlarm(80).livenessAlarm(80).allowCoreThreadTimeOut(1).build();
        Assert.isTrue(testText.equals(ContentUtil.getPoolContent(threadPoolParameterInfo)));
    }

test_after_fix:

code:
public void assertGetPoolContent() throws IOException { 
     String testText = "{\"tenantId\":\"prescription\",\"itemId\":\"dynamic-threadpool-example\",\"tpId\":" + 
             "\"message-consume\",\"queueType\":1,\"capacity\":4,\"keepAliveTime\":513,\"rejectedType\":4,\"isAlarm\"" + 
             ":1,\"capacityAlarm\":80,\"livenessAlarm\":80,\"allowCoreThreadTimeOut\":1}"; 
  
     ThreadPoolParameterInfo threadPoolParameterInfo = ThreadPoolParameterInfo.builder().tenantId("prescription") 
             .itemId("dynamic-threadpool-example").tpId("message-consume").content("描述信息").corePoolSize(1) 
             .maximumPoolSize(2).queueType(1).capacity(4).keepAliveTime(513).executeTimeOut(null).rejectedType(4) 
             .isAlarm(1).capacityAlarm(80).livenessAlarm(80).allowCoreThreadTimeOut(1).build(); 
  
     ObjectMapper mapper = JsonMapper.builder() 
             .enable(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS) 
             .build(); 
     ObjectNode testTextNode = mapper.createObjectNode(); 
     testTextNode.putPOJO("data", mapper.readTree(testText)); 
     ObjectNode poolContentNode = mapper.createObjectNode(); 
     poolContentNode.putPOJO("data", mapper.readTree(ContentUtil.getPoolContent(threadPoolParameterInfo))); 
  
     Assert.isTrue(testTextNode.equals(poolContentNode)); 
 } 
 
import:
['import java.io.IOException;\n ']
pom:
