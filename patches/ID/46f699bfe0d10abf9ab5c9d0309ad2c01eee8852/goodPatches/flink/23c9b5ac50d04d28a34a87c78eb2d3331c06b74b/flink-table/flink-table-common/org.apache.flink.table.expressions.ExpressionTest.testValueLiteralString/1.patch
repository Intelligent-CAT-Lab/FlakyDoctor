test_before_fix:
	public void testValueLiteralString() {
		assertEquals(
			"[null, null, [1, 2, 3]]",
			new ValueLiteralExpression(new Integer[][]{null, null, {1, 2, 3}}).toString());

		assertEquals(
			"[null, null, ['1', '2', '3', 'Dog''s']]",
			new ValueLiteralExpression(
					new String[][]{null, null, {"1", "2", "3", "Dog's"}},
					DataTypes.ARRAY(DataTypes.ARRAY(DataTypes.STRING())))
				.toString());

		final Map<String, Integer> map = new HashMap<>();
		map.put("key1", 1);
		map.put("key2", 2);
		map.put("key3", 3);
		assertEquals(
			"{key1=1, key2=2, key3=3}",
			new ValueLiteralExpression(
					map,
					DataTypes.MAP(DataTypes.STRING(), DataTypes.INT()))
				.toString());
		assertEquals(
			"{key1=1, key2=2, key3=3}",
			new ValueLiteralExpression(
					map,
					DataTypes.MULTISET(DataTypes.STRING()))
				.toString());
	}

test_after_fix:

code:
public void testValueLiteralString() { 
     assertEquals( 
         "[null, null, [1, 2, 3]]", 
         new ValueLiteralExpression(new Integer[][]{null, null, {1, 2, 3}}).toString()); 
  
     assertEquals( 
         "[null, null, ['1', '2', '3', 'Dog''s']]", 
         new ValueLiteralExpression( 
                 new String[][]{null, null, {"1", "2", "3", "Dog's"}}, 
                 DataTypes.ARRAY(DataTypes.ARRAY(DataTypes.STRING()))) 
             .toString()); 
  
     final Map<String, Integer> map = new LinkedHashMap<>(); 
     map.put("key1", 1); 
     map.put("key2", 2); 
     map.put("key3", 3); 
     assertEquals( 
         "{key1=1, key2=2, key3=3}", 
         new ValueLiteralExpression( 
                 map, 
                 DataTypes.MAP(DataTypes.STRING(), DataTypes.INT())) 
             .toString()); 
     assertEquals( 
         "{key1=1, key2=2, key3=3}", 
         new ValueLiteralExpression( 
                 map, 
                 DataTypes.MULTISET(DataTypes.STRING())) 
             .toString()); 
 } 
 
import:
['import java.util.LinkedHashMap;\n ']
pom:

