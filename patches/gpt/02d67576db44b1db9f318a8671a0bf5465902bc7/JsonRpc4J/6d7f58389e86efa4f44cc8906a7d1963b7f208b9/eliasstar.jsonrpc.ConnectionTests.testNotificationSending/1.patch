Test File Path: projects/6d7f58389e86efa4f44cc8906a7d1963b7f208b9/JsonRpc4J/src/test/java/eliasstar/jsonrpc/ConnectionTests.java

    Original Test Method:
     public void testNotificationSending() {
        client.setResponse("test");

        var cases = new Executable[] {
                () -> {
                    connection.sendNotification("test");
                    assertEquals("{\"jsonrpc\":\"2.0\",\"method\":\"test\"}", client.getRequest());
                },
                () -> {
                    connection.sendNotification("test", new JsonArray());
                    assertEquals("{\"jsonrpc\":\"2.0\",\"method\":\"test\",\"params\":[]}", client.getRequest());
                },
                () -> {
                    connection.sendNotification("test", new JsonObject());
                    assertEquals("{\"jsonrpc\":\"2.0\",\"method\":\"test\",\"params\":{}}", client.getRequest());
                }
        };

        assertAll(cases);
    }

    
test_code:
    public void testNotificationSending() {
        client.setResponse("test");

        var cases = new Executable[] {
                () -> {
                    connection.sendNotification("test");
                    String request = client.getRequest();
                    JsonObject jsonObject = new JsonParser().parse(request).getAsJsonObject();
                    assertEquals("2.0", jsonObject.get("jsonrpc").getAsString());
                    assertEquals("test", jsonObject.get("method").getAsString());
                },
                () -> {
                    connection.sendNotification("test", new JsonArray());
                    String request = client.getRequest();
                    JsonObject jsonObject = new JsonParser().parse(request).getAsJsonObject();
                    assertEquals("2.0", jsonObject.get("jsonrpc").getAsString());
                    assertEquals("test", jsonObject.get("method").getAsString());
                    assertEquals(new JsonArray(), jsonObject.get("params").getAsJsonArray());
                },
                () -> {
                    connection.sendNotification("test", new JsonObject());
                    String request = client.getRequest();
                    JsonObject jsonObject = new JsonParser().parse(request).getAsJsonObject();
                    assertEquals("2.0", jsonObject.get("jsonrpc").getAsString());
                    assertEquals("test", jsonObject.get("method").getAsString());
                    assertEquals(new JsonObject(), jsonObject.get("params").getAsJsonObject());
                }
        };

        assertAll(cases);
    }

import:
['import com.google.gson.JsonParser;']
pom:

    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.6</version>
    </dependency>
 