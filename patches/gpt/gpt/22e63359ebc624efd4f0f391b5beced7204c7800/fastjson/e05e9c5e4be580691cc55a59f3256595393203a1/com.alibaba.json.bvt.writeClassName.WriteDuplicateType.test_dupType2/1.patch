Test File Path: projects/e05e9c5e4be580691cc55a59f3256595393203a1/fastjson/src/test/java/com/alibaba/json/bvt/writeClassName/WriteDuplicateType.java

    Original Test Method:
     public void test_dupType2() throws Exception {
        DianDianCart cart = new DianDianCart();
        cart.setId(1001);
        
        LinkedHashMap<String, HashMap<String, Object>> cartMap = new LinkedHashMap<String, HashMap<String, Object>>();
        
        HashMap<String, Object> obj = new HashMap<String, Object>();
        obj.put("id", 1001);
        obj.put(JSON.DEFAULT_TYPE_KEY, "com.alibaba.json.bvt.writeClassName.WriteDuplicateType$DianDianCart");
        cartMap.put("1001", obj);
        
        String text1 = JSON.toJSONString(cartMap, SerializerFeature.WriteClassName);
        Assert.assertEquals("{\"@type\":\"java.util.LinkedHashMap\",\"1001\":{\"@type\":\"com.alibaba.json.bvt.writeClassName.WriteDuplicateType$DianDianCart\",\"id\":1001}}", text1);
        
    }

    
test_code:
public void test_dupType2() throws Exception {
    DianDianCart cart = new DianDianCart();
    cart.setId(1001);

    LinkedHashMap<String, LinkedHashMap<String, Object>> cartMap = new LinkedHashMap<String, LinkedHashMap<String, Object>>();

    LinkedHashMap<String, Object> obj = new LinkedHashMap<String, Object>();
    obj.put("@type", "com.alibaba.json.bvt.writeClassName.WriteDuplicateType$DianDianCart");
    obj.put("id", 1001);
    cartMap.put("1001", obj);

    String text1 = JSON.toJSONString(cartMap, SerializerFeature.WriteClassName);
    Assert.assertEquals("{\"@type\":\"java.util.LinkedHashMap\",\"1001\":{\"@type\":\"com.alibaba.json.bvt.writeClassName.WriteDuplicateType$DianDianCart\",\"id\":1001}}", text1);
}

import:
[]
pom:

