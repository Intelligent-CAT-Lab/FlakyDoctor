test_before_fix:
  public void testPartitionDiscoveryDBPattern() throws TException, IOException {
    String dbName = "db4";
    String tableName = "tbl4";
    Map<String, Column> colMap = buildAllColumns();
    List<String> partKeys = Lists.newArrayList("state", "dt");
    List<String> partKeyTypes = Lists.newArrayList("string", "date");
    List<List<String>> partVals = Lists.newArrayList(
      Lists.newArrayList("__HIVE_DEFAULT_PARTITION__", "1990-01-01"),
      Lists.newArrayList("CA", "1986-04-28"),
      Lists.newArrayList("MN", "2018-11-31"));
    createMetadata(DEFAULT_CATALOG_NAME, dbName, tableName, partKeys, partKeyTypes, partVals, colMap, false);
    Table table = client.getTable(dbName, tableName);
    List<Partition> partitions = client.listPartitions(dbName, tableName, (short) -1);
    assertEquals(3, partitions.size());
    String tableLocation = table.getSd().getLocation();
    URI location = URI.create(tableLocation);
    Path tablePath = new Path(location);
    FileSystem fs = FileSystem.get(location, conf);
    Path newPart1 = new Path(tablePath, "state=WA/dt=2018-12-01");
    Path newPart2 = new Path(tablePath, "state=UT/dt=2018-12-02");
    fs.mkdirs(newPart1);
    fs.mkdirs(newPart2);
    assertEquals(5, fs.listStatus(tablePath).length);
    table.getParameters().put(PartitionManagementTask.DISCOVER_PARTITIONS_TBLPROPERTY, "true");
    client.alter_table(dbName, tableName, table);
    // no match for this db pattern, so we will see only 3 partitions
    conf.set(MetastoreConf.ConfVars.PARTITION_MANAGEMENT_DATABASE_PATTERN.getVarname(), "*dbfoo*");
    runPartitionManagementTask(conf);
    partitions = client.listPartitions(dbName, tableName, (short) -1);
    assertEquals(3, partitions.size());

    // matching db pattern, we will see all 5 partitions now
    conf.set(MetastoreConf.ConfVars.PARTITION_MANAGEMENT_DATABASE_PATTERN.getVarname(), "*db4*");
    runPartitionManagementTask(conf);
    partitions = client.listPartitions(dbName, tableName, (short) -1);
    assertEquals(5, partitions.size());
  }

test_after_fix:

code:
void testPartitionDiscoveryDBPattern() throws TException, IOException { 
     String dbName = "db4"; 
     String tableName = "tbl4"; 
     Map<String, Column> colMap = buildAllColumns(); 
     List<String> partKeys = Lists.newArrayList("state", "dt"); 
     List<String> partKeyTypes = Lists.newArrayList("string", "date"); 
     List<List<String>> partVals = Lists.newArrayList( 
             Lists.newArrayList("__HIVE_DEFAULT_PARTITION__", "1990-01-01"), 
             Lists.newArrayList("CA", "1986-04-28"), 
             Lists.newArrayList("MN", "2018-11-31")); 
     createMetadata(DEFAULT_CATALOG_NAME, dbName, tableName, partKeys, partKeyTypes, partVals, colMap, false); 
     Table table = client.getTable(dbName, tableName); 
     List<Partition> partitions = client.listPartitions(dbName, tableName, (short) -1); 
     assertEquals(3, partitions.size()); 
     String tableLocation = table.getSd().getLocation(); 
     URI location = URI.create(tableLocation); 
     Path tablePath = new Path(location); 
     FileSystem fs = FileSystem.get(location, conf); 
     Path newPart1 = new Path(tablePath, "state=WA/dt=2018-12-01"); 
     Path newPart2 = new Path(tablePath, "state=UT/dt=2018-12-02"); 
     fs.mkdirs(newPart1); 
     fs.mkdirs(newPart2); 
     assertEquals(5, fs.listStatus(tablePath).length); 
     table.getParameters().put(PartitionManagementTask.DISCOVER_PARTITIONS_TBLPROPERTY, "true"); 
     client.alter_table(dbName, tableName, table); 
     conf.set(MetastoreConf.ConfVars.PARTITION_MANAGEMENT_DATABASE_PATTERN.getVarname(), "*dbfoo*"); 
     runPartitionManagementTask(conf); 
     partitions = client.listPartitions(dbName, tableName, (short) -1); 
     LinkedHashMap<String, Partition> sortedPartitions = partitions.stream() 
             .collect(Collectors.toMap(partition -> partition.getValues().toString(), Function.identity(), (oldValue, newValue) -> oldValue, LinkedHashMap::new)); 
     assertEquals(3, sortedPartitions.size()); 
     conf.set(MetastoreConf.ConfVars.PARTITION_MANAGEMENT_DATABASE_PATTERN.getVarname(), "*db4*"); 
     runPartitionManagementTask(conf); 
     partitions = client.listPartitions(dbName, tableName, (short) -1); 
     sortedPartitions = partitions.stream() 
             .collect(Collectors.toMap(partition -> partition.getValues().toString(), Function.identity(), (oldValue, newValue) -> oldValue, LinkedHashMap::new)); 
     assertEquals(5, sortedPartitions.size()); 
 } 
 
import:
['import java.util.function.Function;\n ']
pom:
