Test File Path: projects/27dd4c4666f2c559c0ef84d18221cf104b1f699c/orika/core/src/test/java/ma/glasnost/orika/test/generator/BeanToArrayGenerationTestCase.java

    Original Test Method:
     public void testBeanToStringArrayGeneration() throws Exception {
        
        
        MapperFactory factory = MappingUtil.getMapperFactory();
        
        factory.classMap(Student.class, String[].class)
                .field("grade.letter", "0")
                .field("grade.point", "1")
                .field("grade.percentage", "2")
                .field("name.first", "3")
                .field("name.last", "4")
                .byDefault()
                .register();
        
        MapperFacade mapper = factory.getMapperFacade();
        
        Student student = new Student();
        student.id = "1";
        student.email = "test@test.com";
        student.name = new Name();
        student.name.first = "Chuck";
        student.name.last = "Testa";
        student.grade = new Grade();
        student.grade.letter = "B-";
        student.grade.percentage = 81.5;
        student.grade.point = 2.7;
        
        String[] result = mapper.map(student, String[].class);
        
        int index = -1;
        Assert.assertEquals(student.grade.letter, result[++index]);
        Assert.assertEquals("" + student.grade.point, result[++index]);
        Assert.assertEquals("" + student.grade.percentage, result[++index]);
        Assert.assertEquals(student.name.first, result[++index]);
        Assert.assertEquals(student.name.last, result[++index]);
        Assert.assertEquals(student.id, result[++index]);
        Assert.assertEquals(student.email, result[++index]);
        
        
        Student mapBack = mapper.map(result, Student.class);
        
        Assert.assertEquals(student.id, mapBack.id);
        Assert.assertEquals(student.email, mapBack.email);
        Assert.assertEquals(student.name.first, mapBack.name.first);
        Assert.assertEquals(student.name.last, mapBack.name.last);
        Assert.assertEquals(student.grade.letter, mapBack.grade.letter);
        Assert.assertEquals(student.grade.percentage, mapBack.grade.percentage, DELTA);
        Assert.assertEquals(student.grade.point, mapBack.grade.point, DELTA);
        
    }

    
test_code:
public void testBeanToStringArrayGeneration() throws Exception {
    MapperFactory factory = MappingUtil.getMapperFactory();

    factory.classMap(Student.class, String[].class)
            .field("id", "0")
            .field("email", "1")
            .field("grade.letter", "2")
            .field("grade.point", "3")
            .field("grade.percentage", "4")
            .field("name.first", "5")
            .field("name.last", "6")
            .byDefault()
            .register();

    MapperFacade mapper = factory.getMapperFacade();

    Student student = new Student();
    student.id = "1";
    student.email = "test@test.com";
    student.name = new Name();
    student.name.first = "Chuck";
    student.name.last = "Testa";
    student.grade = new Grade();
    student.grade.letter = "B-";
    student.grade.percentage = 81.5;
    student.grade.point = 2.7;

    String[] result = mapper.map(student, String[].class);

    int index = -1;
    Assert.assertEquals(student.id, result[++index]);
    Assert.assertEquals(student.email, result[++index]);
    Assert.assertEquals(student.grade.letter, result[++index]);
    Assert.assertEquals("" + student.grade.point, result[++index]);
    Assert.assertEquals("" + student.grade.percentage, result[++index]);
    Assert.assertEquals(student.name.first, result[++index]);
    Assert.assertEquals(student.name.last, result[++index]);

    Student mapBack = mapper.map(result, Student.class);

    Assert.assertEquals(student.id, mapBack.id);
    Assert.assertEquals(student.email, mapBack.email);
    Assert.assertEquals(student.name.first, mapBack.name.first);
    Assert.assertEquals(student.name.last, mapBack.name.last);
    Assert.assertEquals(student.grade.letter, mapBack.grade.letter);
    Assert.assertEquals(student.grade.percentage, mapBack.grade.percentage, DELTA);
    Assert.assertEquals(student.grade.point, mapBack.grade.point, DELTA);
}

import:
[]
pom:

<!-- No changes needed -->
