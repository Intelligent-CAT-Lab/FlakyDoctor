Test File Path: projects/4b237366bf81050e56aa4d96944cffcd594593c0/jmeter-datadog-backend-listener/src/test/java/org/datadog/jmeter/plugins/DatadogBackendClientTest.java

    Original Test Method:
     public void testExtractLogs() {
        SampleResult result = createDummySampleResult("foo");
        this.client.handleSampleResults(Collections.singletonList(result), context);
        Assert.assertEquals(1, this.logsBuffer.size());
        String expectedPayload = "{\"sample_start_time\":1.0,\"response_code\":\"123\",\"headers_size\":0.0,\"sample_label\":\"foo\",\"latency\":12.0,\"group_threads\":0.0,\"idle_time\":0.0,\"error_count\":0.0,\"message\":\"\",\"url\":\"\",\"ddsource\":\"jmeter\",\"sent_bytes\":124.0,\"thread_group\":\"bar\",\"body_size\":0.0,\"content_type\":\"\",\"load_time\":125.0,\"thread_name\":\"bar baz\",\"sample_end_time\":126.0,\"bytes\":12345.0,\"connect_time\":0.0,\"sample_count\":10.0,\"data_type\":\"\",\"all_threads\":0.0,\"data_encoding\":null}";
        Assert.assertEquals(this.logsBuffer.get(0).toString(), expectedPayload);
    }

    
test_code:
public void testExtractLogs() {
    SampleResult result = createDummySampleResult("foo");
    this.client.handleSampleResults(Collections.singletonList(result), context);
    Assert.assertEquals(1, this.logsBuffer.size());
    String expectedPayload = "{\"sample_start_time\":1.0,\"response_code\":\"123\",\"headers_size\":0.0,\"sample_label\":\"foo\",\"latency\":12.0,\"group_threads\":0.0,\"idle_time\":0.0,\"error_count\":0.0,\"message\":\"\",\"url\":\"\",\"ddsource\":\"jmeter\",\"sent_bytes\":124.0,\"thread_group\":\"bar\",\"body_size\":0.0,\"content_type\":\"\",\"load_time\":125.0,\"thread_name\":\"bar baz\",\"sample_end_time\":126.0,\"bytes\":12345.0,\"connect_time\":0.0,\"sample_count\":10.0,\"data_type\":\"\",\"all_threads\":0.0,\"data_encoding\":null}";

    JsonParser parser = new JsonParser();
    JsonElement actual = parser.parse(this.logsBuffer.get(0).toString());
    JsonElement expected = parser.parse(expectedPayload);
    Assert.assertEquals(expected, actual);
}

import:
['import com.google.gson.JsonElement;', 'import com.google.gson.JsonParser;']
pom:

<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version>
</dependency>
