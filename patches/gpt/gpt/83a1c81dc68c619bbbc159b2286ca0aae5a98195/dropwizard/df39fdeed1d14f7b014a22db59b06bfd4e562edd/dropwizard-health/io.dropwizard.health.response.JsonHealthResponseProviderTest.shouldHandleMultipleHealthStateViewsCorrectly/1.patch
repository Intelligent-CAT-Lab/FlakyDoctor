Test File Path: projects/df39fdeed1d14f7b014a22db59b06bfd4e562edd/dropwizard/dropwizard-health/src/test/java/io/dropwizard/health/response/JsonHealthResponseProviderTest.java

    Original Test Method:
     void shouldHandleMultipleHealthStateViewsCorrectly() throws IOException {
        // given
        final HealthStateView fooView = new HealthStateView("foo", true, HealthCheckType.READY, true);
        final HealthStateView barView = new HealthStateView("bar", true, HealthCheckType.ALIVE, true);
        final HealthStateView bazView = new HealthStateView("baz", false, HealthCheckType.READY, false);
        final Collection<String> names = new ArrayList<>();
        names.add(fooView.getName());
        names.add(barView.getName());
        names.add(bazView.getName());
        final Map<String, Collection<String>> queryParams = Collections.singletonMap(
            JsonHealthResponseProvider.NAME_QUERY_PARAM, names);

        // when
        when(healthStateAggregator.healthStateView(fooView.getName())).thenReturn(Optional.of(fooView));
        when(healthStateAggregator.healthStateView(barView.getName())).thenReturn(Optional.of(barView));
        when(healthStateAggregator.healthStateView(bazView.getName())).thenReturn(Optional.of(bazView));
        when(healthStatusChecker.isHealthy(isNull())).thenReturn(true);
        final HealthResponse response = jsonHealthResponseProvider.healthResponse(queryParams);

        // then
        assertThat(response.isHealthy()).isTrue();
        assertThat(response.getContentType()).isEqualTo(MediaType.APPLICATION_JSON);
        assertThat(response.getMessage()).isEqualToIgnoringWhitespace(fixture("/json/multiple-healthy-responses.json"));
    }

    
test_code:
void shouldHandleMultipleHealthStateViewsCorrectly() throws IOException {
    // given
    final HealthStateView fooView = new HealthStateView("foo", true, HealthCheckType.READY, true);
    final HealthStateView barView = new HealthStateView("bar", true, HealthCheckType.ALIVE, true);
    final HealthStateView bazView = new HealthStateView("baz", false, HealthCheckType.READY, false);
    final Collection<String> names = new ArrayList<>();
    names.add(fooView.getName());
    names.add(barView.getName());
    names.add(bazView.getName());
    final Map<String, Collection<String>> queryParams = Collections.singletonMap(
        JsonHealthResponseProvider.NAME_QUERY_PARAM, names);

    // when
    when(healthStateAggregator.healthStateView(fooView.getName())).thenReturn(Optional.of(fooView));
    when(healthStateAggregator.healthStateView(barView.getName())).thenReturn(Optional.of(barView));
    when(healthStateAggregator.healthStateView(bazView.getName())).thenReturn(Optional.of(bazView));
    when(healthStatusChecker.isHealthy(isNull())).thenReturn(true);
    final HealthResponse response = jsonHealthResponseProvider.healthResponse(queryParams);

    // then
    assertThat(response.isHealthy()).isTrue();
    assertThat(response.getContentType()).isEqualTo(MediaType.APPLICATION_JSON);
    JsonParser parser = new JsonParser();
    JsonElement actual = parser.parse(response.getMessage());
    JsonElement expected = parser.parse(fixture("/json/multiple-healthy-responses.json"));
    assertThat(actual).isEqualTo(expected);
}

import:
['import com.google.gson.JsonParser;', 'import com.google.gson.JsonElement;']
pom:

<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version>
</dependency>
