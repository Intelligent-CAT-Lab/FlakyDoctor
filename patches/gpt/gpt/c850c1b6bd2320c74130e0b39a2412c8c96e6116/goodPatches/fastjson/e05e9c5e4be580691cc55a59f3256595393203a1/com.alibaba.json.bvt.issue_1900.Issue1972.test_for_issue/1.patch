test_before_fix:
    public void test_for_issue() throws Exception {
        JSONObject jsonObject = new JSONObject();
        final JSONObject a = new JSONObject();
        final JSONObject b = new JSONObject();
        a.put("b", b);

        b.put("c", "2018-04");
        b.put("d", new JSONArray());

        Integer obj = Integer.valueOf(123);

        jsonObject.put("a", a);
        JSONPath.arrayAdd(jsonObject,"$.a.b[c = '2018-04'].d", obj);

        assertEquals("{\"a\":{\"b\":{\"c\":\"2018-04\",\"d\":[123]}}}", jsonObject.toString());
    }

test_after_fix:

code:
public void test_for_issue() throws Exception { 
     JSONObject jsonObject = new JSONObject(); 
     final JSONObject a = new JSONObject(); 
     final JSONObject b = new JSONObject(); 
     a.put("b", b); 
  
     b.put("c", "2018-04"); 
     b.put("d", new JSONArray()); 
  
     Integer obj = Integer.valueOf(123); 
  
     jsonObject.put("a", a); 
     JSONPath.arrayAdd(jsonObject,"$.a.b[c = '2018-04'].d", obj); 
  
     String expected = "{\"a\":{\"b\":{\"c\":\"2018-04\",\"d\":[123]}}}"; 
     String actual = jsonObject.toString(); 
  
     JSONObject expectedJson = JSONObject.parseObject(expected, Feature.OrderedField); 
     JSONObject actualJson = JSONObject.parseObject(actual, Feature.OrderedField); 
  
     assertEquals(expectedJson, actualJson); 
 } 
 
import:
['import com.alibaba.fastjson.parser.Feature;\n ', 'import com.alibaba.fastjson.serializer.SerializerFeature;\n ']
pom:

<dependency>
    <groupId>com.alibaba</groupId>
    <artifactId>fastjson</artifactId>
    <version>1.2.75</version>
</dependency>
