Test File Path: projects/618363c461843ec2849cdc15d53ee85bdbaec3f2/jmeter-maven-plugin/src/test/java/com/lazerycode/jmeter/json/TestConfigTest.java

    Original Test Method:
     public void createConfigFromResourceFile() throws MojoExecutionException, URISyntaxException, JsonProcessingException {
        URL configFile = this.getClass().getResource(testConfigFile);
        File testConfigJSON = new File(configFile.toURI());
        TestConfigurationWrapper testConfig = new TestConfigurationWrapper(testConfigJSON, "test-execution");
        assertThat(testConfig.getFullConfig())
                .isEqualTo("{\"executionID\":\"test-execution\",\"jmeterDirectoryPath\":null,\"runtimeJarName\":null,\"resultsOutputIsCSVFormat\":false,\"generateReports\":false,\"resultFilesLocations\":[],\"propertiesMap\":null,\"jmeterWorkingDirectoryPath\":null}");
    }

    
test_code:
public void createConfigFromResourceFile() throws MojoExecutionException, URISyntaxException, JsonProcessingException {
    URL configFile = this.getClass().getResource(testConfigFile);
    File testConfigJSON = new File(configFile.toURI());
    TestConfigurationWrapper testConfig = new TestConfigurationWrapper(testConfigJSON, "test-execution");

    ObjectMapper mapper = new ObjectMapper();
    JsonNode actualObj = mapper.readTree(testConfig.getFullConfig());
    JsonNode expectedObj = mapper.readTree("{\"executionID\":\"test-execution\",\"jmeterDirectoryPath\":null,\"runtimeJarName\":null,\"resultsOutputIsCSVFormat\":false,\"generateReports\":false,\"resultFilesLocations\":[],\"propertiesMap\":null,\"jmeterWorkingDirectoryPath\":null}");

    assertThat(actualObj).isEqualTo(expectedObj);
}

import:
['import com.fasterxml.jackson.databind.JsonNode;', 'import com.fasterxml.jackson.databind.ObjectMapper;']
pom:

<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.12.3</version>
</dependency>
