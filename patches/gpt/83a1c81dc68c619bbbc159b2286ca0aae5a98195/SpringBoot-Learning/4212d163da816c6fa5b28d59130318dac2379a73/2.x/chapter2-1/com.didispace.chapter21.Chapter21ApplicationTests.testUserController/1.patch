Test File Path: projects/4212d163da816c6fa5b28d59130318dac2379a73/SpringBoot-Learning/2.x/chapter2-1/src/test/java/com/didispace/chapter21/Chapter21ApplicationTests.java

    Original Test Method:
     public void testUserController() throws Exception {
        // 测试UserController
        RequestBuilder request;

        // 1、get查一下user列表，应该为空
        request = get("/users/");
        mvc.perform(request)
                .andExpect(status().isOk())
                .andExpect(content().string(equalTo("[]")));

        // 2、post提交一个user
        request = post("/users/")
                .contentType(MediaType.APPLICATION_JSON)
                .content("{\"id\":1,\"name\":\"测试大师\",\"age\":20}");
        mvc.perform(request)
                .andExpect(content().string(equalTo("success")));

        // 3、get获取user列表，应该有刚才插入的数据
        request = get("/users/");
        mvc.perform(request)
                .andExpect(status().isOk())
                .andExpect(content().string(equalTo("[{\"id\":1,\"name\":\"测试大师\",\"age\":20}]")));

        // 4、put修改id为1的user
        request = put("/users/1")
                .contentType(MediaType.APPLICATION_JSON)
                .content("{\"name\":\"测试终极大师\",\"age\":30}");
        mvc.perform(request)
                .andExpect(content().string(equalTo("success")));

        // 5、get一个id为1的user
        request = get("/users/1");
        mvc.perform(request)
                .andExpect(content().string(equalTo("{\"id\":1,\"name\":\"测试终极大师\",\"age\":30}")));

        // 6、del删除id为1的user
        request = delete("/users/1");
        mvc.perform(request)
                .andExpect(content().string(equalTo("success")));

        // 7、get查一下user列表，应该为空
        request = get("/users/");
        mvc.perform(request)
                .andExpect(status().isOk())
                .andExpect(content().string(equalTo("[]")));

    }

    
test_code:
public void testUserController() throws Exception {
    // 测试UserController
    RequestBuilder request;

    // 1、get查一下user列表，应该为空
    request = get("/users/");
    mvc.perform(request)
            .andExpect(status().isOk())
            .andExpect(content().json("[]"));

    // 2、post提交一个user
    request = post("/users/")
            .contentType(MediaType.APPLICATION_JSON)
            .content("{\"id\":1,\"name\":\"测试大师\",\"age\":20}");
    mvc.perform(request)
            .andExpect(content().string(equalTo("success")));

    // 3、get获取user列表，应该有刚才插入的数据
    request = get("/users/");
    mvc.perform(request)
            .andExpect(status().isOk())
            .andExpect(content().json("[{\"id\":1,\"name\":\"测试大师\",\"age\":20}]"));

    // 4、put修改id为1的user
    request = put("/users/1")
            .contentType(MediaType.APPLICATION_JSON)
            .content("{\"name\":\"测试终极大师\",\"age\":30}");
    mvc.perform(request)
            .andExpect(content().string(equalTo("success")));

    // 5、get一个id为1的user
    request = get("/users/1");
    mvc.perform(request)
            .andExpect(content().json("{\"id\":1,\"name\":\"测试终极大师\",\"age\":30}"));

    // 6、del删除id为1的user
    request = delete("/users/1");
    mvc.perform(request)
            .andExpect(content().string(equalTo("success")));

    // 7、get查一下user列表，应该为空
    request = get("/users/");
    mvc.perform(request)
            .andExpect(status().isOk())
            .andExpect(content().json("[]"));
}

import:
[]
pom:

<!-- No changes needed -->
