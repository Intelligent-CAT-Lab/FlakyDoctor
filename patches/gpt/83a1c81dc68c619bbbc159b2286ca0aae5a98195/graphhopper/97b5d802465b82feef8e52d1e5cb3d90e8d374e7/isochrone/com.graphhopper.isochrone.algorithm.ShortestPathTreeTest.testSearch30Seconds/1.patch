Test File Path: projects/97b5d802465b82feef8e52d1e5cb3d90e8d374e7/graphhopper/isochrone/src/test/java/com/graphhopper/isochrone/algorithm/ShortestPathTreeTest.java

    Original Test Method:
     public void testSearch30Seconds() {
        fillTestGraph(graph);
        ShortestPathTree instance = new ShortestPathTree(graph, new FastestWeighting(carEncoder, new PMap()), false);
        instance.setTimeLimit(30);
        List<Set<Integer>> res = searchFromNode0Into5Buckets(instance);
        assertEquals("[[0], [4], [], [6], [1, 7]]", res.toString());
    }

    
test_code:
public void testSearch30Seconds() {
    fillTestGraph(graph);
    ShortestPathTree instance = new ShortestPathTree(graph, new FastestWeighting(carEncoder, new PMap()), false);
    instance.setTimeLimit(30);
    List<Set<Integer>> res = searchFromNode0Into5Buckets(instance);
    List<Set<Integer>> expected = new ArrayList<>();
    expected.add(new LinkedHashSet<>(Arrays.asList(0)));
    expected.add(new LinkedHashSet<>(Arrays.asList(4)));
    expected.add(new LinkedHashSet<>());
    expected.add(new LinkedHashSet<>(Arrays.asList(6)));
    expected.add(new LinkedHashSet<>(Arrays.asList(1, 7)));
    assertEquals(expected, res);
}

import:
['import java.util.Arrays;', 'import java.util.LinkedHashSet;']
pom:

 