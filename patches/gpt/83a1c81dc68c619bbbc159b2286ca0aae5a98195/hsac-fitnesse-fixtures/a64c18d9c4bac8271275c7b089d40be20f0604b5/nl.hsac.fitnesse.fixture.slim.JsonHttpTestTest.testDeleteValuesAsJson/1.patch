Test File Path: projects/a64c18d9c4bac8271275c7b089d40be20f0604b5/hsac-fitnesse-fixtures/src/test/java/nl/hsac/fitnesse/fixture/slim/JsonHttpTestTest.java

    Original Test Method:
     public void testDeleteValuesAsJson() {
        JsonHttpTest jsonHttpTestTest = new JsonHttpTest();
        jsonHttpTestTest.setValueFor("3", "C");
        jsonHttpTestTest.setValueFor("4", "d");
        XmlHttpResponse req1 = checkCall(url -> jsonHttpTestTest.deleteWithValuesAsJson(url));
        assertEquals("DELETE", jsonHttpTestTest.getResponse().getMethod());
        assertEquals("DELETE", req1.getMethod());
        assertEquals("{\"C\":\"3\",\"d\":\"4\"}", req1.getRequest());
    }

    
test_code:
public void testDeleteValuesAsJson() {
    JsonHttpTest jsonHttpTestTest = new JsonHttpTest();
    jsonHttpTestTest.setValueFor("3", "C");
    jsonHttpTestTest.setValueFor("4", "d");
    XmlHttpResponse req1 = checkCall(url -> jsonHttpTestTest.deleteWithValuesAsJson(url));
    assertEquals("DELETE", jsonHttpTestTest.getResponse().getMethod());
    assertEquals("DELETE", req1.getMethod());

    com.google.gson.JsonParser parser = new com.google.gson.JsonParser();
    com.google.gson.JsonObject expected = parser.parse("{\"C\":\"3\",\"d\":\"4\"}").getAsJsonObject();
    com.google.gson.JsonObject actual = parser.parse(req1.getRequest()).getAsJsonObject();
    assertEquals(expected, actual);
}

import:
['import com.google.gson.JsonParser;', 'import com.google.gson.JsonObject;']
pom:

<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version>
</dependency>
