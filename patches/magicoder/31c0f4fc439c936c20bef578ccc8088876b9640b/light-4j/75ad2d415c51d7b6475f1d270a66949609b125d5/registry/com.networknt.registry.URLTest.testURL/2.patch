Test File Path: projects/75ad2d415c51d7b6475f1d270a66949609b125d5/light-4j/registry/src/test/java/com/networknt/registry/URLTest.java

    Original Test Method:
     public void testURL() {
        Map<String, String> parameters = new HashMap<>();
        parameters.put("key1", "value1");
        parameters.put("key2", "true");
        parameters.put("key3", "10");
        parameters.put("key4", "3.14");
        parameters.put("key5", "10L");
        parameters.put(URLParamType.nodeType.getName(), Constants.NODE_TYPE_SERVICE);
        parameters.put(URLParamType.version.getName(), URLParamType.version.getValue());

        URL url = new URLImpl("http", "localhost", 8080, "config", parameters);

        String p1 = url.getParameter("key1");
        Assert.assertEquals("value1", p1);
        String p2 = url.getParameter("key6", "default");
        Assert.assertEquals("default", p2);

        Boolean b1 = url.getBooleanParameter("key2", true);
        Assert.assertTrue(b1);

        Boolean b2 = url.getBooleanParameter("key7", true);
        Assert.assertTrue(b2);

        Integer i1 = url.getIntParameter("key3", 0);
        Assert.assertEquals(10, i1.intValue());

        Integer i2 = url.getIntParameter("key8", 9);
        Assert.assertEquals(9, i2.intValue());

        //Float f1 = url.getFloatParameter("key4", 0.0f);
        //Assert.assertEquals(Float.valueOf(3.14f), f1);

        //Float f2 = url.getFloatParameter("key9", 0.01f);
        //Assert.assertEquals(Float.valueOf(0.01f), f2);

        String uri = url.getUri();
        Assert.assertEquals("http://localhost:8080/config", uri);

        String identity = url.getIdentity();
        Assert.assertEquals("http://localhost:8080/default/config/1.0/service", identity);

        URL refUrl = new URLImpl("http", "localhost", 8080, "config");
        boolean canServe = url.canServe(refUrl);
        Assert.assertTrue(canServe);

        String fullStr = url.toFullStr();
        Assert.assertEquals("http://localhost:8080/config?key1=value1&key2=true&key5=10L&key3=10&key4=3.14&nodeType=service&version=1.0&", fullStr);


        URL newUrl = URLImpl.valueOf("http://localhost:8080/config?key1=value1&key2=true&key5=10L&key3=10&key4=3.14&nodeType=service&version=1.0");

        Assert.assertNotNull(newUrl);
    }

    
test_code:
        public void testURL() {
            Map<String, String> parameters = new TreeMap<>();
            parameters.put("key1", "value1");
            parameters.put("key2", "true");
            parameters.put("key3", "10");
            parameters.put("key4", "3.14");
            parameters.put("key5", "10L");
            parameters.put(URLParamType.nodeType.getName(), Constants.NODE_TYPE_SERVICE);
            parameters.put(URLParamType.version.getName(), URLParamType.version.getValue());

            URL url = new URLImpl("http", "localhost", 8080, "config", parameters);

            String p1 = url.getParameter("key1");
            Assert.assertEquals("value1", p1);
            String p2 = url.getParameter("key6", "default");
            Assert.assertEquals("default", p2);

            Boolean b1 = url.getBooleanParameter("key2", true);
            Assert.assertTrue(b1);

            Boolean b2 = url.getBooleanParameter("key7", true);
            Assert.assertTrue(b2);

            Integer i1 = url.getIntParameter("key3", 0);
            Assert.assertEquals(10, i1.intValue());

            Integer i2 = url.getIntParameter("key8", 9);
            Assert.assertEquals(9, i2.intValue());

            //Float f1 = url.getFloatParameter("key4", 0.0f);
            //Assert.assertEquals(Float.valueOf(3.14f), f1);

            //Float f2 = url.getFloatParameter("key9", 0.01f);
            //Assert.assertEquals(Float.valueOf(0.01f), f2);

            String uri = url.getUri();
            Assert.assertEquals("http://localhost:8080/config", uri);

            String identity = url.getIdentity();
            Assert.assertEquals("http://localhost:8080/default/config/1.0/service", identity);

            URL refUrl = new URLImpl("http", "localhost", 8080, "config");
            boolean canServe = url.canServe(refUrl);
            Assert.assertTrue(canServe);

            String fullStr = url.toFullStr();
            Assert.assertEquals("http://localhost:8080/config?key1=value1&key2=true&key3=10&key4=3.14&key5=10L&nodeType=service&version=1.0&", fullStr);


            URL newUrl = URLImpl.valueOf("http://localhost:8080/config?key1=value1&key2=true&key5=10L&key3=10&key4=3.14&nodeType=service&version=1.0");

            Assert.assertNotNull(newUrl);
        }

import:
['import java.util.*;']
pom:
None