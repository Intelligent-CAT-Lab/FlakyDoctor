Test File Path: projects/81e3a7ec0492148724da4512fcefcb47ba82894a/commons-collections/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java

    Original Test Method:
     public void getFromMap() {
        // Unordered map, entries exist
        final Map<String, String> expected = new HashMap<>();
        expected.put("zeroKey", "zero");
        expected.put("oneKey", "one");

        final Map<String, String> found = new HashMap<>();
        Map.Entry<String, String> entry = CollectionUtils.get(expected, 0);
        found.put(entry.getKey(), entry.getValue());
        entry = CollectionUtils.get(expected, 1);
        found.put(entry.getKey(), entry.getValue());
        assertEquals(expected, found);

        // Map index out of range
        try {
            CollectionUtils.get(expected, 2);
            fail("Expecting IndexOutOfBoundsException.");
        } catch (final IndexOutOfBoundsException e) {
            // expected
        }
        try {
            CollectionUtils.get(expected, -2);
            fail("Expecting IndexOutOfBoundsException.");
        } catch (final IndexOutOfBoundsException e) {
            // expected
        }

        // Sorted map, entries exist, should respect order
        final SortedMap<String, String> map = new TreeMap<>();
        map.put("zeroKey", "zero");
        map.put("oneKey", "one");
        Map.Entry<String, String> test = CollectionUtils.get(map, 1);
        assertEquals("zeroKey", test.getKey());
        assertEquals("zero", test.getValue());
        test = CollectionUtils.get(map, 0);
        assertEquals("oneKey", test.getKey());
        assertEquals("one", test.getValue());
    }

    
Patch after Stitching:

test_code:
        public void getFromMap() {
            // Unordered map, entries exist
            final Map<String, String> expected = new LinkedHashMap<>();
            expected.put("zeroKey", "zero");
            expected.put("oneKey", "one");

            final Map<String, String> found = new LinkedHashMap<>();
            Map.Entry<String, String> entry = CollectionUtils.get(expected, 0);
            found.put(entry.getKey(), entry.getValue());
            entry = CollectionUtils.get(expected, 1);
            found.put(entry.getKey(), entry.getValue());
            assertEquals(expected, found);

            // Map index out of range
            try {
                CollectionUtils.get(expected, 2);
                fail("Expecting IndexOutOfBoundsException.");
            } catch (final IndexOutOfBoundsException e) {
                // expected
            }
            try {
                CollectionUtils.get(expected, -2);
                fail("Expecting IndexOutOfBoundsException.");
            } catch (final IndexOutOfBoundsException e) {
                // expected
            }

            // Sorted map, entries exist, should respect order
            final SortedMap<String, String> map = new TreeMap<>();
            map.put("zeroKey", "zero");
            map.put("oneKey", "one");
            Map.Entry<String, String> test = CollectionUtils.get(map, 1);
            assertEquals("zeroKey", test.getKey());
            assertEquals("zero", test.getValue());
            test = CollectionUtils.get(map, 0);
            assertEquals("oneKey", test.getKey());
            assertEquals("one", test.getValue());
        }

import:
['import java.util.LinkedHashMap;\n']
pom:
None
Patch before Stitching:

test_code:
        public void getFromMap() {
            // Unordered map, entries exist
            final Map<String, String> expected = new LinkedHashMap<>();
            expected.put("zeroKey", "zero");
            expected.put("oneKey", "one");

            final Map<String, String> found = new LinkedHashMap<>();
            Map.Entry<String, String> entry = CollectionUtils.get(expected, 0);
            found.put(entry.getKey(), entry.getValue());
            entry = CollectionUtils.get(expected, 1);
            found.put(entry.getKey(), entry.getValue());
            assertEquals(expected, found);

            // Map index out of range
            try {
                CollectionUtils.get(expected, 2);
                fail("Expecting IndexOutOfBoundsException.");
            } catch (final IndexOutOfBoundsException e) {
                // expected
            }
            try {
                CollectionUtils.get(expected, -2);
                fail("Expecting IndexOutOfBoundsException.");
            } catch (final IndexOutOfBoundsException e) {
                // expected
            }

            // Sorted map, entries exist, should respect order
            final SortedMap<String, String> map = new TreeMap<>();
            map.put("zeroKey", "zero");
            map.put("oneKey", "one");
            Map.Entry<String, String> test = CollectionUtils.get(map, 1);
            assertEquals("zeroKey", test.getKey());
            assertEquals("zero", test.getValue());
            test = CollectionUtils.get(map, 0);
            assertEquals("oneKey", test.getKey());
            assertEquals("one", test.getValue());
        }

import:
['import java.util.LinkedHashMap;\n']
pom:
None