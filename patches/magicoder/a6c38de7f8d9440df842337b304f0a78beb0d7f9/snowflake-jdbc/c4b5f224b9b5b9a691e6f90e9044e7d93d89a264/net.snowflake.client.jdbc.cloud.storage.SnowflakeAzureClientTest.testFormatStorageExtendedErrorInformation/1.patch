Test File Path: projects/c4b5f224b9b5b9a691e6f90e9044e7d93d89a264/snowflake-jdbc/src/test/java/net/snowflake/client/jdbc/cloud/storage/SnowflakeAzureClientTest.java

    Original Test Method:
   public void testFormatStorageExtendedErrorInformation() {
    String expectedStr0 =
        "StorageExceptionExtendedErrorInformation: {ErrorCode= 403, ErrorMessage= Server refuses"
            + " to authorize the request, AdditionalDetails= {}}";
    String expectedStr1 =
        "StorageExceptionExtendedErrorInformation: {ErrorCode= 403, ErrorMessage= Server refuses"
            + " to authorize the request, AdditionalDetails= { key1= helloworld,key2= ,key3="
            + " fakemessage}}";
    StorageExtendedErrorInformation info = new StorageExtendedErrorInformation();
    info.setErrorCode("403");
    info.setErrorMessage("Server refuses to authorize the request");
    String formatedStr = SnowflakeAzureClient.FormatStorageExtendedErrorInformation(info);
    assertEquals(expectedStr0, formatedStr);

    HashMap<String, String[]> map = new HashMap<>();
    map.put("key1", new String[] {"hello", "world"});
    map.put("key2", new String[] {});
    map.put("key3", new String[] {"fake", "message"});
    info.setAdditionalDetails(map);
    formatedStr = SnowflakeAzureClient.FormatStorageExtendedErrorInformation(info);
    assertEquals(expectedStr1, formatedStr);
  }

    
Patch after Stitching:

test_code:
        public void testFormatStorageExtendedErrorInformation() {
            String expectedStr0 =
                "StorageExceptionExtendedErrorInformation: {ErrorCode= 403, ErrorMessage= Server refuses"
                    + " to authorize the request, AdditionalDetails= {}}";
            String expectedStr1 =
                "StorageExceptionExtendedErrorInformation: {ErrorCode= 403, ErrorMessage= Server refuses"
                    + " to authorize the request, AdditionalDetails= { key1= helloworld,key2= ,key3="
                    + " fakemessage}}";
            StorageExtendedErrorInformation info = new StorageExtendedErrorInformation();
            info.setErrorCode("403");
            info.setErrorMessage("Server refuses to authorize the request");
            String formatedStr = SnowflakeAzureClient.FormatStorageExtendedErrorInformation(info);
            assertEquals(expectedStr0, formatedStr);

            LinkedHashMap<String, String[]> map = new LinkedHashMap<>();
            map.put("key1", new String[] {"hello", "world"});
            map.put("key2", new String[] {});
            map.put("key3", new String[] {"fake", "message"});
            info.setAdditionalDetails(map);
            formatedStr = SnowflakeAzureClient.FormatStorageExtendedErrorInformation(info);
            assertEquals(expectedStr1, formatedStr);
        }

import:
['import java.util.LinkedHashMap;\n']
pom:
None
Patch before Stitching:

test_code:
        public void testFormatStorageExtendedErrorInformation() {
            String expectedStr0 =
                "StorageExceptionExtendedErrorInformation: {ErrorCode= 403, ErrorMessage= Server refuses"
                    + " to authorize the request, AdditionalDetails= {}}";
            String expectedStr1 =
                "StorageExceptionExtendedErrorInformation: {ErrorCode= 403, ErrorMessage= Server refuses"
                    + " to authorize the request, AdditionalDetails= { key1= helloworld,key2= ,key3="
                    + " fakemessage}}";
            StorageExtendedErrorInformation info = new StorageExtendedErrorInformation();
            info.setErrorCode("403");
            info.setErrorMessage("Server refuses to authorize the request");
            String formatedStr = SnowflakeAzureClient.FormatStorageExtendedErrorInformation(info);
            assertEquals(expectedStr0, formatedStr);

            LinkedHashMap<String, String[]> map = new LinkedHashMap<>();
            map.put("key1", new String[] {"hello", "world"});
            map.put("key2", new String[] {});
            map.put("key3", new String[] {"fake", "message"});
            info.setAdditionalDetails(map);
            formatedStr = SnowflakeAzureClient.FormatStorageExtendedErrorInformation(info);
            assertEquals(expectedStr1, formatedStr);
        }

import:
['import java.util.LinkedHashMap;\n']
pom:
None