Test File Path: projects/b65f7324544381646119be48393f0aa2b3417f2e/crane4j/crane4j-core/src/test/java/cn/crane4j/core/support/SimpleCrane4jGlobalConfigurationTest.java

    Original Test Method:
     public void operatePropertyMappingStrategy() {
        Assert.assertNotNull(configuration.getPropertyMappingStrategyManager());
        Collection<PropertyMappingStrategy> strategies = new ArrayList<>(configuration.getAllPropertyMappingStrategies());
        Assert.assertFalse(strategies.isEmpty());
        strategies.stream().map(PropertyMappingStrategy::getName).forEach(configuration::removePropertyMappingStrategy);
        Assert.assertTrue(configuration.getAllPropertyMappingStrategies().isEmpty());
        strategies.forEach(configuration::addPropertyMappingStrategy);
        Assert.assertEquals(strategies, new ArrayList<>(configuration.getAllPropertyMappingStrategies()));
    }

    
test_code:
        public void operatePropertyMappingStrategy() {
            Assert.assertNotNull(configuration.getPropertyMappingStrategyManager());
            List<PropertyMappingStrategy> strategies = new ArrayList<>(configuration.getAllPropertyMappingStrategies());
            Assert.assertFalse(strategies.isEmpty());
            for (PropertyMappingStrategy strategy : strategies) {
                configuration.removePropertyMappingStrategy(strategy.getName());
            }
            Assert.assertTrue(configuration.getAllPropertyMappingStrategies().isEmpty());
            Collections.sort(strategies, Comparator.comparing(Object::toString));
            strategies.forEach(configuration::addPropertyMappingStrategy);
            List<PropertyMappingStrategy> strategies2 = new ArrayList<>(configuration.getAllPropertyMappingStrategies());
            Collections.sort(strategies2, Comparator.comparing(Object::toString));
            Assert.assertEquals(strategies, strategies2);
        }

import:
['import java.util.*;', 'import java.util.stream.*;']
pom:
        <!-- no dependencies needed -->