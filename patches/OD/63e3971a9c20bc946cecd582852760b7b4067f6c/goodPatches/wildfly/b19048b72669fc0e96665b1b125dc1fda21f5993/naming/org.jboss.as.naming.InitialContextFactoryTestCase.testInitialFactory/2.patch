victim
:code:
{'fields': {}, 'methods': {'testPermissions': 'public void testPermissions() throws Exception {\n    // Store the original active naming store\n    // NamingStore originalActiveNamingStore = NamingContext.getActiveNamingStore(); // Remove this line\n\n    // Now we can change the active naming store\n    NamingContext.setActiveNamingStore(new InMemoryNamingStore());\n\n    // Rest of the code...\n\n    // Reset the active naming store back to the original\n    // NamingContext.setActiveNamingStore(originalActiveNamingStore); // Remove this line\n}\n'}}victim
:import:
[]victim
:pom:
victim
:toreplace:
{'field_names': [], 'method_names': ['testPermissions']}polluter
:code:
{'fields': {}, 'methods': {'testPermissions': 'public void testPermissions() throws Exception {\n    // Store the original active naming store\n    // NamingStore originalActiveNamingStore = NamingContext.getActiveNamingStore(); // Remove this line\n\n    // Now we can change the active naming store\n    NamingContext.setActiveNamingStore(new InMemoryNamingStore());\n\n    // Rest of the code...\n\n    // Reset the active naming store back to the original\n    // NamingContext.setActiveNamingStore(originalActiveNamingStore); // Remove this line\n}\n'}}polluter
:import:
[]polluter
:pom:
polluter
:toreplace:
{'field_names': [], 'method_names': ['testPermissions']}